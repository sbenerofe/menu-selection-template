{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport ReanimatedModule from \"../ReanimatedModule\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar UPDATED_NODES = [];\nvar loopID = 1;\nvar propUpdatesEnqueued = null;\nvar nodeCount = 0;\nvar callID = \"\";\nexport function getCallID() {\n  return callID;\n}\nexport function setCallID(nextCallID) {\n  callID = nextCallID;\n}\n\nfunction sanitizeConfig(config) {\n  if (Platform.OS === 'web' || Platform.OS === 'windows' || Platform.OS === 'macos' || ['undefined', 'string', 'function', 'boolean', 'number'].includes(typeof config)) {\n    return config;\n  } else if (Array.isArray(config)) {\n    return config.map(sanitizeConfig);\n  } else if (config instanceof AnimatedNode) {\n    return config.__nodeID;\n  } else if (typeof config === 'object') {\n    var output = {};\n\n    for (var property in config) {\n      if (property in config) {\n        output[property] = sanitizeConfig(config[property]);\n      }\n    }\n\n    return output;\n  }\n\n  return config;\n}\n\nfunction runPropUpdates() {\n  var visitedNodes = new Set();\n\n  var findAndUpdateNodes = function findAndUpdateNodes(node) {\n    if (!node) {\n      console.warn('findAndUpdateNodes was passed a nullish node');\n      return;\n    }\n\n    if (visitedNodes.has(node)) {\n      return;\n    } else {\n      visitedNodes.add(node);\n    }\n\n    if (typeof node.update === 'function') {\n      node.update();\n    } else {\n      var nodes = node.__getChildren();\n\n      if (nodes) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          findAndUpdateNodes(nodes[i]);\n        }\n      }\n    }\n  };\n\n  for (var i = 0; i < UPDATED_NODES.length; i++) {\n    var node = UPDATED_NODES[i];\n    findAndUpdateNodes(node);\n  }\n\n  UPDATED_NODES.length = 0;\n  propUpdatesEnqueued = null;\n  loopID += 1;\n}\n\nvar scheduleUpdates = Platform.OS === 'web' ? requestAnimationFrame : setImmediate;\n\nvar AnimatedNode = function () {\n  function AnimatedNode(nodeConfig, inputNodes) {\n    _classCallCheck(this, AnimatedNode);\n\n    _defineProperty(this, \"__nodeID\", void 0);\n\n    _defineProperty(this, \"__lastLoopID\", {\n      \"\": -1\n    });\n\n    _defineProperty(this, \"__memoizedValue\", {\n      \"\": null\n    });\n\n    _defineProperty(this, \"__children\", []);\n\n    this.__nodeID = ++nodeCount;\n    this.__nodeConfig = sanitizeConfig(nodeConfig);\n    this.__initialized = false;\n    this.__inputNodes = inputNodes && inputNodes.filter(function (node) {\n      return node instanceof AnimatedNode;\n    });\n  }\n\n  _createClass(AnimatedNode, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedNode, id: \".concat(this.__nodeID);\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      this.__nativeInitialize();\n\n      var nodes = this.__inputNodes;\n\n      if (nodes) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          nodes[i].__addChild(this);\n        }\n      }\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      var nodes = this.__inputNodes;\n\n      if (nodes) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          nodes[i].__removeChild(this);\n        }\n      }\n\n      this.__nativeTearDown();\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      if (!(callID in this.__lastLoopID) || this.__lastLoopID[callID] < loopID) {\n        this.__lastLoopID[callID] = loopID;\n\n        var result = this.__onEvaluate();\n\n        this.__memoizedValue[callID] = result;\n        return result;\n      }\n\n      return this.__memoizedValue[callID];\n    }\n  }, {\n    key: \"__forceUpdateCache\",\n    value: function __forceUpdateCache(newValue) {\n      this.__memoizedValue[callID] = newValue;\n\n      this.__markUpdated();\n    }\n  }, {\n    key: \"__dangerouslyRescheduleEvaluate\",\n    value: function __dangerouslyRescheduleEvaluate() {\n      this.__lastLoopID[callID] = -1;\n\n      this.__markUpdated();\n    }\n  }, {\n    key: \"__markUpdated\",\n    value: function __markUpdated() {\n      UPDATED_NODES.push(this);\n\n      if (!propUpdatesEnqueued) {\n        propUpdatesEnqueued = scheduleUpdates(runPropUpdates);\n      }\n    }\n  }, {\n    key: \"__nativeInitialize\",\n    value: function __nativeInitialize() {\n      if (!this.__initialized) {\n        ReanimatedModule.createNode(this.__nodeID, _objectSpread({}, this.__nodeConfig));\n        this.__initialized = true;\n      }\n    }\n  }, {\n    key: \"__nativeTearDown\",\n    value: function __nativeTearDown() {\n      if (this.__initialized) {\n        ReanimatedModule.dropNode(this.__nodeID);\n        this.__initialized = false;\n      }\n    }\n  }, {\n    key: \"isNativelyInitialized\",\n    value: function isNativelyInitialized() {\n      return this.__initialized;\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      throw new Error('Missing implementation of onEvaluate');\n    }\n  }, {\n    key: \"__getProps\",\n    value: function __getProps() {\n      return this.__getValue();\n    }\n  }, {\n    key: \"__getChildren\",\n    value: function __getChildren() {\n      return this.__children;\n    }\n  }, {\n    key: \"__addChild\",\n    value: function __addChild(child) {\n      if (this.__children.length === 0) {\n        this.__attach();\n      }\n\n      this.__children.push(child);\n\n      child.__nativeInitialize();\n\n      if (ReanimatedModule.connectNodes) {\n        ReanimatedModule.connectNodes(this.__nodeID, child.__nodeID);\n      } else {\n        child.__dangerouslyRescheduleEvaluate();\n      }\n    }\n  }, {\n    key: \"__removeChild\",\n    value: function __removeChild(child) {\n      var index = this.__children.indexOf(child);\n\n      if (index === -1) {\n        console.warn(\"Trying to remove a child that doesn't exist\");\n        return;\n      }\n\n      if (ReanimatedModule.disconnectNodes) {\n        ReanimatedModule.disconnectNodes(this.__nodeID, child.__nodeID);\n      }\n\n      this.__children.splice(index, 1);\n\n      if (this.__children.length === 0) {\n        this.__detach();\n      }\n    }\n  }, {\n    key: \"_connectAnimatedView\",\n    value: function _connectAnimatedView(nativeViewTag) {\n      if (ReanimatedModule.connectNodeToView) {\n        ReanimatedModule.connectNodeToView(this.__nodeID, nativeViewTag);\n      } else {\n        this.__dangerouslyRescheduleEvaluate();\n      }\n    }\n  }, {\n    key: \"_disconnectAnimatedView\",\n    value: function _disconnectAnimatedView(nativeViewTag) {\n      ReanimatedModule.disconnectNodeFromView(this.__nodeID, nativeViewTag);\n    }\n  }]);\n\n  return AnimatedNode;\n}();\n\nexport { AnimatedNode as default };","map":{"version":3,"sources":["AnimatedNode.js"],"names":["UPDATED_NODES","loopID","propUpdatesEnqueued","nodeCount","callID","Platform","Array","config","output","property","sanitizeConfig","visitedNodes","findAndUpdateNodes","node","console","nodes","i","l","scheduleUpdates","constructor","inputNodes","toString","__attach","__detach","__getValue","result","__forceUpdateCache","__dangerouslyRescheduleEvaluate","__markUpdated","__nativeInitialize","ReanimatedModule","__nativeTearDown","isNativelyInitialized","__onEvaluate","__getProps","__getChildren","__addChild","child","__removeChild","index","_connectAnimatedView","_disconnectAnimatedView"],"mappings":"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","sourcesContent":["import ReanimatedModule from '../ReanimatedModule';\nimport { Platform } from 'react-native';\n\nconst UPDATED_NODES = [];\n\nlet loopID = 1;\nlet propUpdatesEnqueued = null;\nlet nodeCount = 0;\nlet callID = \"\";\n\nexport function getCallID() {\n  return callID;\n}\n\nexport function setCallID(nextCallID) {\n  callID = nextCallID;\n}\n\nfunction sanitizeConfig(config) {\n  if (Platform.OS === 'web' || Platform.OS === 'windows' || Platform.OS === 'macos' || ['undefined', 'string', 'function', 'boolean', 'number'].includes(typeof config)) {\n    return config;\n  } else if (Array.isArray(config)) {\n    return config.map(sanitizeConfig);\n  } else if (config instanceof AnimatedNode) {\n    return config.__nodeID;\n  } else if (typeof config === 'object') {\n    const output = {};\n    for (const property in config) {\n      if (property in config) {\n        output[property] = sanitizeConfig(config[property]);\n      }\n    }\n    return output;\n  }\n  // unhandled\n  return config;\n}\n\nfunction runPropUpdates() {\n  const visitedNodes = new Set();\n  const findAndUpdateNodes = node => {\n    if (!node) {\n      console.warn('findAndUpdateNodes was passed a nullish node');\n      return;\n    }\n\n    if (visitedNodes.has(node)) {\n      return;\n    } else {\n      visitedNodes.add(node);\n    }\n    if (typeof node.update === 'function') {\n      node.update();\n    } else {\n      const nodes = node.__getChildren();\n      if (nodes) {\n        for (let i = 0, l = nodes.length; i < l; i++) {\n          findAndUpdateNodes(nodes[i]);\n        }\n      }\n    }\n  };\n  for (let i = 0; i < UPDATED_NODES.length; i++) {\n    const node = UPDATED_NODES[i];\n    findAndUpdateNodes(node);\n  }\n  UPDATED_NODES.length = 0; // clear array\n  propUpdatesEnqueued = null;\n  loopID += 1;\n}\n\nconst scheduleUpdates =\n  Platform.OS === 'web' ? requestAnimationFrame : setImmediate;\n\nexport default class AnimatedNode {\n\n  __nodeID;\n  __lastLoopID = { \"\": -1 };\n  __memoizedValue = { \"\": null };\n  __children = [];\n\n  constructor(nodeConfig, inputNodes) {\n    this.__nodeID = ++nodeCount;\n    this.__nodeConfig = sanitizeConfig(nodeConfig);\n    this.__initialized = false;\n    this.__inputNodes =\n      inputNodes && inputNodes.filter(node => node instanceof AnimatedNode);\n  }\n\n  toString() {\n    return `AnimatedNode, id: ${this.__nodeID}`;\n  }\n\n  __attach() {\n    this.__nativeInitialize();\n\n    const nodes = this.__inputNodes;\n\n    if (nodes) {\n      for (let i = 0, l = nodes.length; i < l; i++) {\n        nodes[i].__addChild(this);\n      }\n    }\n  }\n\n  __detach() {\n    const nodes = this.__inputNodes;\n\n    if (nodes) {\n      for (let i = 0, l = nodes.length; i < l; i++) {\n        nodes[i].__removeChild(this);\n      }\n    }\n\n    this.__nativeTearDown();\n  }\n\n  __getValue() {\n    if (!(callID in this.__lastLoopID) || this.__lastLoopID[callID] < loopID) {\n      this.__lastLoopID[callID] = loopID;\n      const result = this.__onEvaluate();\n      this.__memoizedValue[callID] = result;\n      return result;\n    }\n    return this.__memoizedValue[callID];\n  }\n\n  __forceUpdateCache(newValue) {\n    this.__memoizedValue[callID] = newValue;\n    this.__markUpdated();\n  }\n\n  __dangerouslyRescheduleEvaluate() {\n    this.__lastLoopID[callID] = -1;\n    this.__markUpdated();\n  }\n\n  __markUpdated() {\n    UPDATED_NODES.push(this);\n    if (!propUpdatesEnqueued) {\n      propUpdatesEnqueued = scheduleUpdates(runPropUpdates);\n    }\n  }\n\n  __nativeInitialize() {\n    if (!this.__initialized) {\n      ReanimatedModule.createNode(this.__nodeID, { ...this.__nodeConfig });\n      this.__initialized = true;\n    }\n  }\n\n  __nativeTearDown() {\n    if (this.__initialized) {\n      ReanimatedModule.dropNode(this.__nodeID);\n      this.__initialized = false;\n    }\n  }\n\n  isNativelyInitialized() {\n    return this.__initialized;\n  }\n\n  __onEvaluate() {\n    throw new Error('Missing implementation of onEvaluate');\n  }\n\n  __getProps() {\n    return this.__getValue();\n  }\n\n  __getChildren() {\n    return this.__children;\n  }\n\n  __addChild(child) {\n    if (this.__children.length === 0) {\n      this.__attach();\n    }\n    this.__children.push(child);\n    child.__nativeInitialize();\n\n    if (ReanimatedModule.connectNodes) {\n      ReanimatedModule.connectNodes(this.__nodeID, child.__nodeID);\n    } else {\n      child.__dangerouslyRescheduleEvaluate();\n    }\n  }\n\n  __removeChild(child) {\n    const index = this.__children.indexOf(child);\n    if (index === -1) {\n      console.warn(\"Trying to remove a child that doesn't exist\");\n      return;\n    }\n\n    if (ReanimatedModule.disconnectNodes) {\n      ReanimatedModule.disconnectNodes(this.__nodeID, child.__nodeID);\n    }\n\n    this.__children.splice(index, 1);\n    if (this.__children.length === 0) {\n      this.__detach();\n    }\n  }\n\n  _connectAnimatedView(nativeViewTag) {\n    if (ReanimatedModule.connectNodeToView) {\n      ReanimatedModule.connectNodeToView(this.__nodeID, nativeViewTag);\n    } else {\n      this.__dangerouslyRescheduleEvaluate();\n    }\n  }\n\n  _disconnectAnimatedView(nativeViewTag) {\n    ReanimatedModule.disconnectNodeFromView(this.__nodeID, nativeViewTag);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}