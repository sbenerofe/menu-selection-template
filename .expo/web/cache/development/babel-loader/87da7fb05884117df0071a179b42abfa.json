{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nexport default function createEventObjectProxyPolyfill() {\n  var nodesMap = {\n    translationX: {},\n    translationY: {},\n    state: {},\n    oldState: {},\n    absoluteX: {},\n    absoluteY: {},\n    x: {},\n    y: {},\n    velocityX: {},\n    velocityY: {},\n    scale: {},\n    focalX: {},\n    focalY: {},\n    rotation: {},\n    anchorX: {},\n    anchorY: {},\n    velocity: {},\n    numberOfPointers: {},\n    layout: {\n      x: {},\n      y: {},\n      width: {},\n      height: {}\n    },\n    contentOffset: {\n      y: {},\n      x: {}\n    },\n    layoutMeasurement: {\n      width: {},\n      height: {}\n    },\n    contentSize: {\n      width: {},\n      height: {}\n    },\n    zoomScale: {},\n    contentInset: {\n      right: {},\n      top: {},\n      left: {},\n      bottom: {}\n    }\n  };\n\n  var traverse = function traverse(obj) {\n    for (var key in obj) {\n      traverse(obj[key]);\n\n      _extends(obj[key], {\n        __isProxy: true\n      });\n    }\n  };\n\n  traverse(nodesMap);\n  return nodesMap;\n}","map":{"version":3,"sources":["createEventObjectProxyPolyfill.js"],"names":["nodesMap","translationX","translationY","state","oldState","absoluteX","absoluteY","x","y","velocityX","velocityY","scale","focalX","focalY","rotation","anchorX","anchorY","velocity","numberOfPointers","layout","width","height","contentOffset","layoutMeasurement","contentSize","zoomScale","contentInset","right","top","left","bottom","traverse","obj","Object","__isProxy"],"mappings":";AAKA,eAAe,SAAA,8BAAA,GAA0C;EACvD,IAAMA,QAAQ,GAAG;IAEfC,YAAY,EAFG,EAAA;IAGfC,YAAY,EAHG,EAAA;IAIfC,KAAK,EAJU,EAAA;IAKfC,QAAQ,EALO,EAAA;IAMfC,SAAS,EANM,EAAA;IAOfC,SAAS,EAPM,EAAA;IAQfC,CAAC,EARc,EAAA;IASfC,CAAC,EATc,EAAA;IAUfC,SAAS,EAVM,EAAA;IAWfC,SAAS,EAXM,EAAA;IAYfC,KAAK,EAZU,EAAA;IAafC,MAAM,EAbS,EAAA;IAcfC,MAAM,EAdS,EAAA;IAefC,QAAQ,EAfO,EAAA;IAgBfC,OAAO,EAhBQ,EAAA;IAiBfC,OAAO,EAjBQ,EAAA;IAkBfC,QAAQ,EAlBO,EAAA;IAmBfC,gBAAgB,EAnBD,EAAA;IAqBfC,MAAM,EAAE;MAAEZ,CAAC,EAAH,EAAA;MAASC,CAAC,EAAV,EAAA;MAAgBY,KAAK,EAArB,EAAA;MAA2BC,MAAM,EAAE;IAAnC,CArBO;IAuBfC,aAAa,EAAE;MAAEd,CAAC,EAAH,EAAA;MAASD,CAAC,EAAE;IAAZ,CAvBA;IAwBfgB,iBAAiB,EAAE;MAAEH,KAAK,EAAP,EAAA;MAAaC,MAAM,EAAE;IAArB,CAxBJ;IAyBfG,WAAW,EAAE;MAAEJ,KAAK,EAAP,EAAA;MAAaC,MAAM,EAAE;IAArB,CAzBE;IA0BfI,SAAS,EA1BM,EAAA;IA2BfC,YAAY,EAAE;MAAEC,KAAK,EAAP,EAAA;MAAaC,GAAG,EAAhB,EAAA;MAAsBC,IAAI,EAA1B,EAAA;MAAgCC,MAAM,EAAE;IAAxC;EA3BC,CAAjB;;EA6BA,IAAMC,QAAQ,GAAGC,SAAXD,QAAWC,CAAAA,GAAG,EAAI;IACtB,KAAK,IAAL,GAAA,IAAA,GAAA,EAAuB;MACrBD,QAAQ,CAACC,GAAG,CAAZD,GAAY,CAAJ,CAARA;;MACAE,SAAcD,GAAG,CAAjBC,GAAiB,CAAjBA,EAAwB;QAAEC,SAAS,EAAE;MAAb,CAAxBD;IACD;EAJH,CAAA;;EAMAF,QAAQ,CAARA,QAAQ,CAARA;EACA,OAAA,QAAA;AACD","sourcesContent":["// JSC on Android and iOS 8 & 9 does not support proxies.\n// The below workaround provides a proxy-like functionality for event data by\n// creating an object which contains predefined fields for the most commonly\n// used event attributes. If your app uses even attribute which is not listed\n// here please submit a PR to add that and we will merge it right away\nexport default function createEventObjectProxyPolyfill() {\n  const nodesMap = {\n    // Gesture handlers-related event\n    translationX: {},\n    translationY: {},\n    state: {},\n    oldState: {},\n    absoluteX: {},\n    absoluteY: {},\n    x: {},\n    y: {},\n    velocityX: {},\n    velocityY: {},\n    scale: {},\n    focalX: {},\n    focalY: {},\n    rotation: {},\n    anchorX: {},\n    anchorY: {},\n    velocity: {},\n    numberOfPointers: {},\n    // onLayour-related event\n    layout: { x: {}, y: {}, width: {}, height: {} },\n    // ScrollView event\n    contentOffset: { y: {}, x: {} },\n    layoutMeasurement: { width: {}, height: {} },\n    contentSize: { width: {}, height: {} },\n    zoomScale: {},\n    contentInset: { right: {}, top: {}, left: {}, bottom: {} },\n  };\n  const traverse = obj => {\n    for (const key in obj) {\n      traverse(obj[key]);\n      Object.assign(obj[key], { __isProxy: true });\n    }\n  };\n  traverse(nodesMap);\n  return nodesMap;\n}\n"]},"metadata":{},"sourceType":"module"}